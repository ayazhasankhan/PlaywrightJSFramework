const { test } = require('@playwright/test');
const { LoginPage } = require('../../login/pages/LoginPage');
const { ManagerDocExpressPage } = require('../pages/ManagerDocExpressPage');
const { Common } = require('../../utils/Common');
const { ManagerDashbordPage } = require('../pages/ManagerDashbordPage');
const { EditorDashboardPage } = require('../../editorTab/pages/EditorDashboardPage');

let loginPage;
let common;
let managerDocExpressPage;
let managerDashbordPage;
let editorDashboardPage;

test.describe('Project level user management (@smoke)', () => {
  test.beforeEach(async ({ page, isMobile }) => {
    loginPage = new LoginPage(page, isMobile);
    common = new Common(page, isMobile);
    managerDocExpressPage = new ManagerDocExpressPage(page, isMobile);
    managerDashbordPage = new ManagerDashbordPage(page, isMobile);
    editorDashboardPage = new EditorDashboardPage(page, isMobile);
  });

  test('Validate Manager can enable linguists at the time of project creation and linguists can see the project', async () => {
    await loginPage.navigate();
    await loginPage.clickOnLoginLink();
    await loginPage.enterEmailAddress('ayaz.hasan+manager@helpshift.com');
    await loginPage.enterPassword('Alliswell@3832');
    await loginPage.clickOnLoginButton();
    await managerDocExpressPage.clickOnManagerDocExpressTab();
    await managerDocExpressPage.clickOnProjectTemplateDrpdwn();
    await managerDocExpressPage.enterProjectTemplateName('MrA2ZTestProjectConfigTemplate');
    await managerDocExpressPage.clickOnProjectTemplateNameList('MrA2ZTestProjectConfigTemplate');
    await managerDocExpressPage.clickOnNext();
    await common.uploadFile('./resources/10Segments.txt','#statusMessage');
    await managerDocExpressPage.waitForFileToBeUploaded();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnWorkflowAccordionDrpdwn();
    await managerDocExpressPage.clickOnChannelDrpdwn();
    await managerDocExpressPage.enterChannelName('MrA2ZTestChannel');
    await managerDocExpressPage.clickOnChannel('MrA2ZTestChannel');
    await managerDocExpressPage.clickOnAutomaticLaunch();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnUserManagementAccordionDrpdwn();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnLaunchProject();
    await common.wait(30000);
    await managerDashbordPage.clickOnManagerDashboardTab();
    const id= await managerDocExpressPage.getProjectID();
    await managerDocExpressPage.print(managerDocExpressPage);
    await loginPage.clickOnLogOut();
    await loginPage.clickOnLoginLink();
    await loginPage.enterEmailAddress('ayaz.hasan+editor1@helpshift.com');
    await loginPage.enterPassword('Alliswell@3832');
    await loginPage.clickOnLoginButton();
    await editorDashboardPage.clickOnDashboard(); 
    await common.search(id);
    //await common.validateText(id);
  });

  test('Validate Manager can disable linguists at the time of project creation and linguists can not see the project', async () => {
    await loginPage.navigate();
    await loginPage.clickOnLoginLink();
    await loginPage.enterEmailAddress('ayaz.hasan+manager@helpshift.com');
    await loginPage.enterPassword('Alliswell@3832');
    await loginPage.clickOnLoginButton();
    await managerDocExpressPage.clickOnManagerDocExpressTab();
    await managerDocExpressPage.clickOnProjectTemplateDrpdwn();
    await managerDocExpressPage.enterProjectTemplateName('MrA2ZTestProjectConfigTemplate');
    await managerDocExpressPage.clickOnProjectTemplateNameList('MrA2ZTestProjectConfigTemplate');
    await managerDocExpressPage.clickOnNext();
    await common.uploadFile('./resources/10Segments.txt','#statusMessage');
    await managerDocExpressPage.waitForFileToBeUploaded();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnWorkflowAccordionDrpdwn();
    await managerDocExpressPage.clickOnChannelDrpdwn();
    await managerDocExpressPage.enterChannelName('MrA2ZTestChannel');
    await managerDocExpressPage.clickOnChannel('MrA2ZTestChannel');
    await managerDocExpressPage.clickOnAutomaticLaunch();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnUserManagementAccordionDrpdwn();
    await managerDocExpressPage.disableLinguist();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnLaunchProject();
    await common.wait(30000);
    await managerDashbordPage.clickOnManagerDashboardTab();
    const id= await managerDocExpressPage.getProjectID();
    await managerDocExpressPage.print(managerDocExpressPage);
    await loginPage.clickOnLogOut();
    await loginPage.clickOnLoginLink();
    await loginPage.enterEmailAddress('ayaz.hasan+editor1@helpshift.com');
    await loginPage.enterPassword('Alliswell@3832');
    await loginPage.clickOnLoginButton();
    await editorDashboardPage.clickOnDashboard();
    await common.search(id);
    await common.validateText("No projects currently available!");
  });

  test('Validate Manager can disable linguists for a project from Project Analytics', async () => {
    await loginPage.navigate();
    await loginPage.clickOnLoginLink();
    await loginPage.enterEmailAddress('ayaz.hasan+manager@helpshift.com');
    await loginPage.enterPassword('Alliswell@3832');
    await loginPage.clickOnLoginButton();
    await managerDocExpressPage.clickOnManagerDocExpressTab();
    await managerDocExpressPage.clickOnProjectTemplateDrpdwn();
    await managerDocExpressPage.enterProjectTemplateName('MrA2ZTestProjectConfigTemplate');
    await managerDocExpressPage.clickOnProjectTemplateNameList('MrA2ZTestProjectConfigTemplate');
    await managerDocExpressPage.clickOnNext();
    await common.uploadFile('./resources/10Segments.txt','#statusMessage');
    await managerDocExpressPage.waitForFileToBeUploaded();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnWorkflowAccordionDrpdwn();
    await managerDocExpressPage.clickOnChannelDrpdwn();
    await managerDocExpressPage.enterChannelName('MrA2ZTestChannel');
    await managerDocExpressPage.clickOnChannel('MrA2ZTestChannel');
    await managerDocExpressPage.clickOnAutomaticLaunch();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnUserManagementAccordionDrpdwn();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnLaunchProject();
    //await common.wait(30000);
    await managerDashbordPage.clickOnManagerDashboardTab();
    var id= await managerDocExpressPage.getProjectID();
    await common.search(id);
    await managerDashbordPage.clickOnViewProjectAnalytics();
    await managerDashbordPage.clickOnUserManagementTab();
    await managerDashbordPage.selectEditorUser();
    await managerDashbordPage.clickOnDisableUser();
    await managerDashbordPage.clickOnYes();
    await managerDashbordPage.validateText("Success!");
    await loginPage.clickOnLogOut();
    await loginPage.clickOnLoginLink();
    await loginPage.enterEmailAddress('ayaz.hasan+editor1@helpshift.com');
    await loginPage.enterPassword('Alliswell@3832');
    await loginPage.clickOnLoginButton();
    await editorDashboardPage.clickOnDashboard();
    await common.search(id);
    await common.validateText('No projects currently available!');
  });

  test('Validate Manager can disable and enable linguists for a project from Project Analytics', async () => {
    await loginPage.navigate();
    await loginPage.clickOnLoginLink();
    await loginPage.enterEmailAddress('ayaz.hasan+manager@helpshift.com');
    await loginPage.enterPassword('Alliswell@3832');
    await loginPage.clickOnLoginButton();
    await managerDocExpressPage.clickOnManagerDocExpressTab();
    await managerDocExpressPage.clickOnProjectTemplateDrpdwn();
    await managerDocExpressPage.enterProjectTemplateName('MrA2ZTestProjectConfigTemplate');
    await managerDocExpressPage.clickOnProjectTemplateNameList('MrA2ZTestProjectConfigTemplate');
    await managerDocExpressPage.clickOnNext();
    await common.uploadFile('./resources/10Segments.txt','#statusMessage');
    await managerDocExpressPage.waitForFileToBeUploaded();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnWorkflowAccordionDrpdwn();
    await managerDocExpressPage.clickOnChannelDrpdwn();
    await managerDocExpressPage.enterChannelName('MrA2ZTestChannel');
    await managerDocExpressPage.clickOnChannel('MrA2ZTestChannel');
    await managerDocExpressPage.clickOnAutomaticLaunch();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnUserManagementAccordionDrpdwn();
    await managerDocExpressPage.disableLinguist();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnNext();
    await managerDocExpressPage.clickOnLaunchProject();
    //await common.wait(30000);
    await managerDashbordPage.clickOnManagerDashboardTab();
    var id= await managerDocExpressPage.getProjectID();
    await common.search(id);
    await managerDashbordPage.clickOnViewProjectAnalytics();
    await managerDashbordPage.clickOnUserManagementTab();
    await managerDashbordPage.selectEditorUser();
    await managerDashbordPage.clickOnEnableUser();
    await managerDashbordPage.clickOnYes();
    await managerDashbordPage.validateText("Success!");
    await loginPage.clickOnLogOut();
    await loginPage.clickOnLoginLink();
    await loginPage.enterEmailAddress('ayaz.hasan+editor1@helpshift.com');
    await loginPage.enterPassword('Alliswell@3832');
    await loginPage.clickOnLoginButton();
    await editorDashboardPage.clickOnDashboard();
    await common.search(id);
    //await common.validateText(id);
  });

  test('Validate if Manager can filters user data table from Project Analytics', async () => {
    await loginPage.navigate();
    await loginPage.clickOnLoginLink();
    await loginPage.enterEmailAddress('ayaz.hasan+manager@helpshift.com');
    await loginPage.enterPassword('Alliswell@3832');
    await loginPage.clickOnLoginButton();
    await managerDashbordPage.clickOnManagerDashboardTab();
    await managerDashbordPage.clickOnViewProjectAnalytics();
    await managerDashbordPage.clickOnUserManagementTab();
    await managerDashbordPage.clickOnFilter();
    await managerDashbordPage.clickOnSelectUserDrpwn();
    await managerDashbordPage.clickOnEditor();
    await managerDashbordPage.clickOnFilterSubmit();
   // await managerDashbordPage.validateEditor();
  });

  test('Validate if Manager can see help section', async () => {
    await loginPage.navigate();
    await loginPage.clickOnLoginLink();
    await loginPage.enterEmailAddress('ayaz.hasan+manager@helpshift.com');
    await loginPage.enterPassword('Alliswell@3832');
    await loginPage.clickOnLoginButton();
    await managerDashbordPage.clickOnManagerDashboardTab();
    await managerDashbordPage.clickOnViewProjectAnalytics();
    await managerDashbordPage.clickOnUserManagementTab();
    await managerDashbordPage.clickOnHelp();
    await common.validateText('User Management Help');
    await common.validateText('User Management:');
    await common.validateText('Quality Rating:');
    await common.validateText('Lock Symbol:');
    await common.validateText('Enabled/Disabled:');
    await common.validateText('Availability Calendar Icon:');
  });

  test('Validate if Manager can search user', async () => {
    await loginPage.navigate();
    await loginPage.clickOnLoginLink();
    await loginPage.enterEmailAddress('ayaz.hasan+manager@helpshift.com');
    await loginPage.enterPassword('Alliswell@3832');
    await loginPage.clickOnLoginButton();
    await managerDashbordPage.clickOnManagerDashboardTab();
    await managerDashbordPage.clickOnViewProjectAnalytics();
    await managerDashbordPage.clickOnUserManagementTab();
    await common.search('ayaz.hasan+editor1@helpshift.com');
    await common.validateText('ayaz.hasan+editor1@helpshift.com');
  });
});   
